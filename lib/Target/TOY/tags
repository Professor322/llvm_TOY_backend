!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
AnalyzeBranch	TOYInstrInfo.cpp	/^TOYInstrInfo::AnalyzeBranch(MachineBasicBlock &MBB, MachineBasicBlock *&TBB,$/;"	f	class:TOYInstrInfo
CALL	TOYISelLowering.h	/^  CALL,$/;"	e	enum:llvm::TOYISD::NodeType
CTX	MCTargetDesc/TOYMCCodeEmitter.cpp	/^  const MCContext &CTX;$/;"	m	class:__anon4::TOYMCCodeEmitter	file:
CanLowerReturn	TOYISelLowering.cpp	/^bool TOYTargetLowering::CanLowerReturn($/;"	f	class:TOYTargetLowering
Ctx	TOYMCInstLower.h	/^  MCContext *Ctx;$/;"	m	class:llvm::TOYMCInstLower
DEBUG_TYPE	InstPrinter/TOYInstPrinter.cpp	14;"	d	file:
DEBUG_TYPE	MCTargetDesc/TOYMCCodeEmitter.cpp	14;"	d	file:
DEBUG_TYPE	TOYAsmPrinter.cpp	15;"	d	file:
DEBUG_TYPE	TOYSelectionDAGInfo.cpp	17;"	d	file:
DEBUG_TYPE	TOYSubtarget.cpp	18;"	d	file:
DL	TOYSubtarget.h	/^  const DataLayout DL;       \/\/ Calculates type size & alignment.$/;"	m	class:llvm::TOYSubtarget
ELFTOYAsmBackend	MCTargetDesc/TOYAsmBackend.cpp	/^  ELFTOYAsmBackend(const Target &T, const StringRef TT, uint8_t _OSABI)$/;"	f	class:__anon2::ELFTOYAsmBackend
ELFTOYAsmBackend	MCTargetDesc/TOYAsmBackend.cpp	/^class ELFTOYAsmBackend : public TOYAsmBackend {$/;"	c	namespace:__anon2	file:
EmitByte	MCTargetDesc/TOYMCCodeEmitter.cpp	/^  void EmitByte(unsigned char C, raw_ostream &OS) const { OS << (char)C; }$/;"	f	class:__anon4::TOYMCCodeEmitter
EmitConstant	MCTargetDesc/TOYMCCodeEmitter.cpp	/^  void EmitConstant(uint64_t Val, unsigned Size, raw_ostream &OS) const {$/;"	f	class:__anon4::TOYMCCodeEmitter
EmitFunctionBodyStart	TOYAsmPrinter.cpp	/^void TOYAsmPrinter::EmitFunctionBodyStart() {$/;"	f	class:TOYAsmPrinter
EmitFunctionEntryLabel	TOYAsmPrinter.cpp	/^void TOYAsmPrinter::EmitFunctionEntryLabel() {$/;"	f	class:TOYAsmPrinter
EmitInstruction	TOYAsmPrinter.cpp	/^void TOYAsmPrinter::EmitInstruction(const MachineInstr *MI) {$/;"	f	class:TOYAsmPrinter
EncodeInstruction	MCTargetDesc/TOYMCCodeEmitter.cpp	/^void TOYMCCodeEmitter::EncodeInstruction(const MCInst &MI, raw_ostream &OS,$/;"	f	class:TOYMCCodeEmitter
FIRST_NUMBER	TOYISelLowering.h	/^  FIRST_NUMBER = ISD::BUILTIN_OP_END,$/;"	e	enum:llvm::TOYISD::NodeType
FLInfo	TOYSubtarget.h	/^  TOYFrameLowering FLInfo;$/;"	m	class:llvm::TOYSubtarget
Fixups	MCTargetDesc/TOYFixupKinds.h	/^enum Fixups {$/;"	g	namespace:llvm::TOY
GET_INSTRINFO_CTOR_DTOR	TOYInstrInfo.cpp	30;"	d	file:
GET_INSTRINFO_ENUM	MCTargetDesc/TOYMCTargetDesc.h	57;"	d
GET_INSTRINFO_HEADER	TOYInstrInfo.h	21;"	d
GET_INSTRINFO_MC_DESC	MCTargetDesc/TOYMCTargetDesc.cpp	26;"	d	file:
GET_REGINFO_ENUM	MCTargetDesc/TOYMCTargetDesc.h	52;"	d
GET_REGINFO_HEADER	TOYRegisterInfo.h	19;"	d
GET_REGINFO_MC_DESC	MCTargetDesc/TOYMCTargetDesc.cpp	32;"	d	file:
GET_REGINFO_TARGET_DESC	TOYRegisterInfo.cpp	36;"	d	file:
GET_SUBTARGETINFO_CTOR	TOYSubtarget.cpp	21;"	d	file:
GET_SUBTARGETINFO_ENUM	MCTargetDesc/TOYMCTargetDesc.h	60;"	d
GET_SUBTARGETINFO_HEADER	TOYSubtarget.h	27;"	d
GET_SUBTARGETINFO_MC_DESC	MCTargetDesc/TOYMCTargetDesc.cpp	29;"	d	file:
GET_SUBTARGETINFO_TARGET_DESC	TOYSubtarget.cpp	20;"	d	file:
GetRelocType	MCTargetDesc/TOYELFObjectWriter.cpp	/^unsigned TOYELFObjectWriter::GetRelocType(const MCValue &Target,$/;"	f	class:TOYELFObjectWriter
Initialize	TOYMCInstLower.cpp	/^void TOYMCInstLower::Initialize(Mangler *M, MCContext *C) {$/;"	f	class:TOYMCInstLower
InstrInfo	TOYSubtarget.h	/^  TOYInstrInfo InstrInfo;$/;"	m	class:llvm::TOYSubtarget
InstrItins	TOYSubtarget.h	/^  InstrItineraryData InstrItins;$/;"	m	class:llvm::TOYSubtarget
LLVMInitializeTOYAsmPrinter	TOYAsmPrinter.cpp	/^extern "C" void LLVMInitializeTOYAsmPrinter() {$/;"	f
LLVMInitializeTOYTargetInfo	TargetInfo/TOYTargetInfo.cpp	/^extern "C" void LLVMInitializeTOYTargetInfo() {$/;"	f
LLVMInitializeTOYTargetMC	MCTargetDesc/TOYMCTargetDesc.cpp	/^extern "C" void LLVMInitializeTOYTargetMC() {$/;"	f
LLVM_DELETED_FUNCTION	MCTargetDesc/TOYMCCodeEmitter.cpp	/^  TOYMCCodeEmitter(const TOYMCCodeEmitter &) LLVM_DELETED_FUNCTION;$/;"	m	class:__anon4::TOYMCCodeEmitter	file:
LLVM_DELETED_FUNCTION	MCTargetDesc/TOYMCCodeEmitter.cpp	/^  void operator=(const TOYMCCodeEmitter &) LLVM_DELETED_FUNCTION;$/;"	m	class:__anon4::TOYMCCodeEmitter	file:
LLVM_TOYFIXUPKINDS_H	MCTargetDesc/TOYFixupKinds.h	11;"	d
LOAD_SYM	TOYISelLowering.h	/^  LOAD_SYM,$/;"	e	enum:llvm::TOYISD::NodeType
LastTargetFixupKind	MCTargetDesc/TOYFixupKinds.h	/^  LastTargetFixupKind,$/;"	e	enum:llvm::TOY::Fixups
Lower	TOYMCInstLower.cpp	/^void TOYMCInstLower::Lower(const MachineInstr *MI, MCInst &OutMI) const {$/;"	f	class:TOYMCInstLower
LowerCall	TOYISelLowering.cpp	/^SDValue TOYTargetLowering::LowerCall(TargetLowering::CallLoweringInfo &CLI,$/;"	f	class:TOYTargetLowering
LowerCallResult	TOYISelLowering.cpp	/^SDValue TOYTargetLowering::LowerCallResult($/;"	f	class:TOYTargetLowering
LowerFormalArguments	TOYISelLowering.cpp	/^SDValue TOYTargetLowering::LowerFormalArguments($/;"	f	class:TOYTargetLowering
LowerGlobalAddress	TOYISelLowering.cpp	/^SDValue TOYTargetLowering::LowerGlobalAddress(SDValue Op, SelectionDAG& DAG) const$/;"	f	class:TOYTargetLowering
LowerOperand	TOYMCInstLower.cpp	/^MCOperand TOYMCInstLower::LowerOperand(const MachineOperand &MO,$/;"	f	class:TOYMCInstLower
LowerOperation	TOYISelLowering.cpp	/^SDValue TOYTargetLowering::LowerOperation(SDValue Op, SelectionDAG &DAG) const {$/;"	f	class:TOYTargetLowering
LowerReturn	TOYISelLowering.cpp	/^TOYTargetLowering::LowerReturn(SDValue Chain, CallingConv::ID CallConv,$/;"	f	class:TOYTargetLowering
LowerSymbolOperand	TOYMCInstLower.cpp	/^MCOperand TOYMCInstLower::LowerSymbolOperand(const MachineOperand &MO,$/;"	f	class:TOYMCInstLower
MCII	MCTargetDesc/TOYMCCodeEmitter.cpp	/^  const MCInstrInfo &MCII;$/;"	m	class:__anon4::TOYMCCodeEmitter	file:
MCInstLowering	TOYAsmPrinter.cpp	/^  TOYMCInstLower MCInstLowering;$/;"	m	class:__anon5::TOYAsmPrinter	file:
MOVEi32	TOYISelLowering.h	/^  MOVEi32,$/;"	e	enum:llvm::TOYISD::NodeType
MO_HI16	MCTargetDesc/TOYBaseInfo.h	/^    MO_HI16 = 0x2,$/;"	e	enum:llvm::TOYII::TOF
MO_LO16	MCTargetDesc/TOYBaseInfo.h	/^    MO_LO16 = 0x1,$/;"	e	enum:llvm::TOYII::TOF
MO_NO_FLAG	MCTargetDesc/TOYBaseInfo.h	/^    MO_NO_FLAG = 0,$/;"	e	enum:llvm::TOYII::TOF
MO_OPTION_MASK	MCTargetDesc/TOYBaseInfo.h	/^    MO_OPTION_MASK = 0x7f,$/;"	e	enum:llvm::TOYII::TOF
MO_UNUSED_MAXIMUM	MCTargetDesc/TOYBaseInfo.h	/^    MO_UNUSED_MAXIMUM = 0xff$/;"	e	enum:llvm::TOYII::TOF
MachineOperandType	TOYMCInstLower.h	/^  typedef MachineOperand::MachineOperandType MachineOperandType;$/;"	t	class:llvm::TOYMCInstLower
Mang	TOYMCInstLower.h	/^  Mangler *Mang;$/;"	m	class:llvm::TOYMCInstLower
NodeType	TOYISelLowering.h	/^enum NodeType {$/;"	g	namespace:llvm::TOYISD
NumTargetFixupKinds	MCTargetDesc/TOYFixupKinds.h	/^  NumTargetFixupKinds = LastTargetFixupKind - FirstTargetFixupKind$/;"	e	enum:llvm::TOY::Fixups
OSABI	MCTargetDesc/TOYAsmBackend.cpp	/^  uint8_t OSABI;$/;"	m	class:__anon2::ELFTOYAsmBackend	file:
Printer	TOYMCInstLower.h	/^  AsmPrinter &Printer;$/;"	m	class:llvm::TOYMCInstLower
RET_FLAG	TOYISelLowering.h	/^  RET_FLAG,$/;"	e	enum:llvm::TOYISD::NodeType
RI	TOYInstrInfo.h	/^  const TOYRegisterInfo RI;$/;"	m	class:llvm::TOYInstrInfo
RemoveBranch	TOYInstrInfo.cpp	/^TOYInstrInfo::RemoveBranch(MachineBasicBlock &MBB) const {$/;"	f	class:TOYInstrInfo
Select	TOYISelDAGToDAG.cpp	/^SDNode *TOYDAGToDAGISel::Select(SDNode *N) {$/;"	f	class:TOYDAGToDAGISel
SelectAddr	TOYISelDAGToDAG.cpp	/^bool TOYDAGToDAGISel::SelectAddr(SDValue Addr, SDValue &Base, SDValue &Offset) {$/;"	f	class:TOYDAGToDAGISel
SelectMoveImmediate	TOYISelDAGToDAG.cpp	/^SDNode *TOYDAGToDAGISel::SelectMoveImmediate(SDNode *N) {$/;"	f	class:TOYDAGToDAGISel
Subtarget	TOYISelDAGToDAG.cpp	/^  const TOYSubtarget &Subtarget;$/;"	m	class:__anon6::TOYDAGToDAGISel	file:
Subtarget	TOYISelLowering.h	/^  const TOYSubtarget &Subtarget;$/;"	m	class:llvm::TOYTargetLowering
Subtarget	TOYTargetMachine.h	/^    TOYSubtarget Subtarget;$/;"	m	class:llvm::TOYTargetMachine
TARGET_TOY_H	TOY.h	16;"	d
TLInfo	TOYSubtarget.h	/^  TOYTargetLowering TLInfo;$/;"	m	class:llvm::TOYSubtarget
TOF	MCTargetDesc/TOYBaseInfo.h	/^  enum TOF {$/;"	g	namespace:llvm::TOYII
TOY	MCTargetDesc/TOYFixupKinds.h	/^namespace TOY {$/;"	n	namespace:llvm
TOYAsmBackend	MCTargetDesc/TOYAsmBackend.cpp	/^  TOYAsmBackend(const Target &T, const StringRef TT) : MCAsmBackend() {}$/;"	f	class:__anon1::TOYAsmBackend
TOYAsmBackend	MCTargetDesc/TOYAsmBackend.cpp	/^class TOYAsmBackend : public MCAsmBackend {$/;"	c	namespace:__anon1	file:
TOYAsmPrinter	TOYAsmPrinter.cpp	/^  explicit TOYAsmPrinter(TargetMachine &TM, $/;"	f	class:__anon5::TOYAsmPrinter
TOYAsmPrinter	TOYAsmPrinter.cpp	/^class TOYAsmPrinter : public AsmPrinter {$/;"	c	namespace:__anon5	file:
TOYBASEINFO_H	MCTargetDesc/TOYBaseInfo.h	18;"	d
TOYDAGToDAGISel	TOYISelDAGToDAG.cpp	/^  explicit TOYDAGToDAGISel(TOYTargetMachine &TM, CodeGenOpt::Level OptLevel)$/;"	f	class:__anon6::TOYDAGToDAGISel
TOYDAGToDAGISel	TOYISelDAGToDAG.cpp	/^class TOYDAGToDAGISel : public SelectionDAGISel {$/;"	c	namespace:__anon6	file:
TOYELFObjectWriter	MCTargetDesc/TOYAsmBackend.cpp	/^  TOYELFObjectWriter(uint8_t OSABI)$/;"	f	class:__anon1::TOYELFObjectWriter
TOYELFObjectWriter	MCTargetDesc/TOYAsmBackend.cpp	/^class TOYELFObjectWriter : public MCELFObjectTargetWriter {$/;"	c	namespace:__anon1	file:
TOYELFObjectWriter	MCTargetDesc/TOYELFObjectWriter.cpp	/^  class TOYELFObjectWriter : public MCELFObjectTargetWriter {$/;"	c	namespace:__anon3	file:
TOYELFObjectWriter	MCTargetDesc/TOYELFObjectWriter.cpp	/^TOYELFObjectWriter::TOYELFObjectWriter(uint8_t OSABI)$/;"	f	class:TOYELFObjectWriter
TOYFRAMEINFO_H	TOYFrameLowering.h	16;"	d
TOYFrameLowering	TOYFrameLowering.h	/^    explicit TOYFrameLowering()$/;"	f	class:llvm::TOYFrameLowering
TOYFrameLowering	TOYFrameLowering.h	/^class TOYFrameLowering : public TargetFrameLowering {$/;"	c	namespace:llvm
TOYFunctionInfo	TOYMachineFunctionInfo.h	/^  TOYFunctionInfo() {}$/;"	f	class:llvm::TOYFunctionInfo
TOYFunctionInfo	TOYMachineFunctionInfo.h	/^class TOYFunctionInfo : public MachineFunctionInfo {$/;"	c	namespace:llvm
TOYII	MCTargetDesc/TOYBaseInfo.h	/^namespace TOYII {$/;"	n	namespace:llvm
TOYINSTPRINTER_H	InstPrinter/TOYInstPrinter.h	17;"	d
TOYINSTRUCTIONINFO_H	TOYInstrInfo.h	15;"	d
TOYISD	TOYISelLowering.h	/^namespace TOYISD {$/;"	n	namespace:llvm
TOYISELLOWERING_H	TOYISelLowering.h	16;"	d
TOYInstPrinter	InstPrinter/TOYInstPrinter.h	/^  TOYInstPrinter(const MCAsmInfo &MAI, const MCInstrInfo &MII,$/;"	f	class:llvm::TOYInstPrinter
TOYInstPrinter	InstPrinter/TOYInstPrinter.h	/^class TOYInstPrinter : public MCInstPrinter {$/;"	c	namespace:llvm
TOYInstrInfo	TOYInstrInfo.cpp	/^TOYInstrInfo::TOYInstrInfo()$/;"	f	class:TOYInstrInfo
TOYInstrInfo	TOYInstrInfo.h	/^class TOYInstrInfo : public TOYGenInstrInfo {$/;"	c	namespace:llvm
TOYMACHINEFUNCTIONINFO_H	TOYMachineFunctionInfo.h	15;"	d
TOYMCAsmInfo	MCTargetDesc/TOYMCAsmInfo.cpp	/^TOYMCAsmInfo::TOYMCAsmInfo(StringRef TT) {$/;"	f	class:TOYMCAsmInfo
TOYMCAsmInfo	MCTargetDesc/TOYMCAsmInfo.h	/^class TOYMCAsmInfo : public MCAsmInfoELF {$/;"	c	namespace:llvm
TOYMCCodeEmitter	MCTargetDesc/TOYMCCodeEmitter.cpp	/^  TOYMCCodeEmitter(const MCInstrInfo &mcii, MCContext &ctx)$/;"	f	class:__anon4::TOYMCCodeEmitter
TOYMCCodeEmitter	MCTargetDesc/TOYMCCodeEmitter.cpp	/^class TOYMCCodeEmitter : public MCCodeEmitter {$/;"	c	namespace:__anon4	file:
TOYMCINSTLOWER_H	TOYMCInstLower.h	11;"	d
TOYMCInstLower	TOYMCInstLower.cpp	/^TOYMCInstLower::TOYMCInstLower(class AsmPrinter &asmprinter)$/;"	f	class:TOYMCInstLower
TOYMCInstLower	TOYMCInstLower.h	/^class LLVM_LIBRARY_VISIBILITY TOYMCInstLower {$/;"	c	namespace:llvm
TOYMCTARGETDESC_H	MCTargetDesc/TOYMCTargetDesc.h	15;"	d
TOYPassConfig	TOYTargetMachine.cpp	/^            TOYPassConfig(TOYTargetMachine &TM, PassManagerBase &PM)$/;"	f	class:__anon7::TOYPassConfig
TOYPassConfig	TOYTargetMachine.cpp	/^    class TOYPassConfig : public TargetPassConfig {$/;"	c	namespace:__anon7	file:
TOYREGISTERINFO_H	TOYRegisterInfo.h	15;"	d
TOYRegisterInfo	TOYRegisterInfo.cpp	/^TOYRegisterInfo::TOYRegisterInfo() : TOYGenRegisterInfo(TOY::LR) {}$/;"	f	class:TOYRegisterInfo
TOYRegisterInfo	TOYRegisterInfo.h	/^struct TOYRegisterInfo : public TOYGenRegisterInfo {$/;"	s	namespace:llvm
TOYSELECTIONDAGINFO_H	TOYSelectionDAGInfo.h	15;"	d
TOYSUBTARGET_H	TOYSubtarget.h	15;"	d
TOYSelectionDAGInfo	TOYSelectionDAGInfo.cpp	/^TOYSelectionDAGInfo::TOYSelectionDAGInfo(const DataLayout &DL)$/;"	f	class:TOYSelectionDAGInfo
TOYSelectionDAGInfo	TOYSelectionDAGInfo.h	/^class TOYSelectionDAGInfo : public SelectionDAGTargetInfo {$/;"	c	namespace:llvm
TOYSubtarget	TOYSubtarget.cpp	/^TOYSubtarget::TOYSubtarget(const Triple &TT, const std::string &CPU,$/;"	f	class:TOYSubtarget
TOYSubtarget	TOYSubtarget.h	/^class TOYSubtarget : public TOYGenSubtargetInfo {$/;"	c	namespace:llvm
TOYTARGETASMINFO_H	MCTargetDesc/TOYMCAsmInfo.h	15;"	d
TOYTARGETMACHINE_H	TOYTargetMachine.h	15;"	d
TOYTargetLowering	TOYISelLowering.cpp	/^TOYTargetLowering::TOYTargetLowering(TOYTargetMachine &TOYTM)$/;"	f	class:TOYTargetLowering
TOYTargetLowering	TOYISelLowering.h	/^class TOYTargetLowering : public TargetLowering {$/;"	c	namespace:llvm
TOYTargetMachine	TOYTargetMachine.cpp	/^TOYTargetMachine::TOYTargetMachine(const Target &T, $/;"	f	class:TOYTargetMachine
TOYTargetMachine	TOYTargetMachine.h	/^class TOYTargetMachine : public LLVMTargetMachine {$/;"	c	namespace:llvm
TSInfo	TOYSubtarget.h	/^  TOYSelectionDAGInfo TSInfo;$/;"	m	class:llvm::TOYSubtarget
addAnalysisPasses	TOYTargetMachine.cpp	/^void TOYTargetMachine::addAnalysisPasses(PassManagerBase &PM) {}$/;"	f	class:TOYTargetMachine
addInstSelector	TOYTargetMachine.cpp	/^bool TOYPassConfig::addInstSelector() {$/;"	f	class:TOYPassConfig
addPreEmitPass	TOYTargetMachine.cpp	/^void TOYPassConfig::addPreEmitPass() { return; }$/;"	f	class:TOYPassConfig
addPreISel	TOYTargetMachine.cpp	/^bool TOYPassConfig::addPreISel() { return false; }$/;"	f	class:TOYPassConfig
adjustFixupValue	MCTargetDesc/TOYAsmBackend.cpp	/^static unsigned adjustFixupValue(const MCFixup &Fixup, uint64_t Value,$/;"	f	file:
anchor	MCTargetDesc/TOYMCAsmInfo.cpp	/^void TOYMCAsmInfo::anchor() {}$/;"	f	class:TOYMCAsmInfo
anchor	TOYInstrInfo.cpp	/^void TOYInstrInfo::anchor() {}$/;"	f	class:TOYInstrInfo
anchor	TOYSubtarget.cpp	/^void TOYSubtarget::anchor() {}$/;"	f	class:TOYSubtarget
applyFixup	MCTargetDesc/TOYAsmBackend.cpp	/^void TOYAsmBackend::applyFixup(const MCFixup &Fixup, char *Data,$/;"	f	class:TOYAsmBackend
computeStackSize	TOYFrameLowering.cpp	/^uint64_t TOYFrameLowering::computeStackSize(MachineFunction &MF) const {$/;"	f	class:TOYFrameLowering
copyPhysReg	TOYInstrInfo.cpp	/^void TOYInstrInfo::copyPhysReg(MachineBasicBlock &MBB,$/;"	f	class:TOYInstrInfo
createMCAsmStreamer	MCTargetDesc/TOYMCTargetDesc.cpp	/^createMCAsmStreamer(MCContext &Ctx, formatted_raw_ostream &OS,$/;"	f	file:
createMCStreamer	MCTargetDesc/TOYMCTargetDesc.cpp	/^static MCStreamer *createMCStreamer(const Target &T, StringRef TT,$/;"	f	file:
createPassConfig	TOYTargetMachine.cpp	/^TargetPassConfig *TOYTargetMachine::createPassConfig(PassManagerBase &PM) {$/;"	f	class:TOYTargetMachine
createTOYAsmBackend	MCTargetDesc/TOYAsmBackend.cpp	/^MCAsmBackend *llvm::createTOYAsmBackend(const Target &T,$/;"	f	class:llvm
createTOYELFObjectWriter	MCTargetDesc/TOYELFObjectWriter.cpp	/^MCObjectWriter *llvm::createTOYELFObjectWriter(raw_ostream &OS, uint8_t OSABI) {$/;"	f	class:llvm
createTOYISelDag	TOYISelDAGToDAG.cpp	/^FunctionPass *llvm::createTOYISelDag(TOYTargetMachine &TM,$/;"	f	class:llvm
createTOYMCAsmInfo	MCTargetDesc/TOYMCTargetDesc.cpp	/^static MCAsmInfo *createTOYMCAsmInfo(const MCRegisterInfo &MRI, StringRef TT) {$/;"	f	file:
createTOYMCCodeEmitter	MCTargetDesc/TOYMCCodeEmitter.cpp	/^MCCodeEmitter *llvm::createTOYMCCodeEmitter(const MCInstrInfo &MCII,$/;"	f	class:llvm
createTOYMCCodeGenInfo	MCTargetDesc/TOYMCTargetDesc.cpp	/^static MCCodeGenInfo *createTOYMCCodeGenInfo(StringRef TT, Reloc::Model RM,$/;"	f	file:
createTOYMCInstPrinter	MCTargetDesc/TOYMCTargetDesc.cpp	/^createTOYMCInstPrinter(const Target &T, unsigned SyntaxVariant,$/;"	f	file:
createTOYMCInstrInfo	MCTargetDesc/TOYMCTargetDesc.cpp	/^static MCInstrInfo *createTOYMCInstrInfo() {$/;"	f	file:
createTOYMCRegisterInfo	MCTargetDesc/TOYMCTargetDesc.cpp	/^static MCRegisterInfo *createTOYMCRegisterInfo(StringRef TT) {$/;"	f	file:
createTOYMCSubtargetInfo	MCTargetDesc/TOYMCTargetDesc.cpp	/^static MCSubtargetInfo *createTOYMCSubtargetInfo(StringRef TT, StringRef CPU,$/;"	f	file:
eliminateCallFramePseudoInstr	TOYFrameLowering.cpp	/^void TOYFrameLowering::eliminateCallFramePseudoInstr($/;"	f	class:TOYFrameLowering
eliminateFrameIndex	TOYRegisterInfo.cpp	/^void TOYRegisterInfo::eliminateFrameIndex(MachineBasicBlock::iterator II,$/;"	f	class:TOYRegisterInfo
emitEpilogue	TOYFrameLowering.cpp	/^void TOYFrameLowering::emitEpilogue(MachineFunction &MF,$/;"	f	class:TOYFrameLowering
emitPrologue	TOYFrameLowering.cpp	/^void TOYFrameLowering::emitPrologue(MachineFunction &MF) const {$/;"	f	class:TOYFrameLowering
expandPostRAPseudo	TOYInstrInfo.cpp	/^bool TOYInstrInfo::expandPostRAPseudo(MachineBasicBlock::iterator MI) const$/;"	f	class:TOYInstrInfo
fixup_toy_mov_hi16_pcrel	MCTargetDesc/TOYFixupKinds.h	/^  fixup_toy_mov_hi16_pcrel = FirstTargetFixupKind,$/;"	e	enum:llvm::TOY::Fixups
fixup_toy_mov_lo16_pcrel	MCTargetDesc/TOYFixupKinds.h	/^  fixup_toy_mov_lo16_pcrel,$/;"	e	enum:llvm::TOY::Fixups
getCallPreservedMask	TOYRegisterInfo.cpp	/^const uint32_t *TOYRegisterInfo::getCallPreservedMask(const MachineFunction  &MF,$/;"	f	class:TOYRegisterInfo
getCalleeSavedRegs	TOYRegisterInfo.cpp	/^TOYRegisterInfo::getCalleeSavedRegs(const MachineFunction *MF) const {$/;"	f	class:TOYRegisterInfo
getFrameRegister	TOYRegisterInfo.cpp	/^unsigned TOYRegisterInfo::getFrameRegister(const MachineFunction &MF) const {$/;"	f	class:TOYRegisterInfo
getMachineOpValue	MCTargetDesc/TOYMCCodeEmitter.cpp	/^unsigned TOYMCCodeEmitter::getMachineOpValue(const MCInst &MI,$/;"	f	class:TOYMCCodeEmitter
getMemSrcValue	MCTargetDesc/TOYMCCodeEmitter.cpp	/^unsigned TOYMCCodeEmitter::getMemSrcValue(const MCInst &MI, unsigned OpIdx,$/;"	f	class:TOYMCCodeEmitter
getPassName	TOYISelDAGToDAG.cpp	/^  virtual const char *getPassName() const {$/;"	f	class:__anon6::TOYDAGToDAGISel
getPointerSize	MCTargetDesc/TOYAsmBackend.cpp	/^  unsigned getPointerSize() const { return 4; }$/;"	f	class:__anon1::TOYAsmBackend
getRegisterInfo	TOYInstrInfo.h	/^  const TOYRegisterInfo &getRegisterInfo() const { return RI; }$/;"	f	class:llvm::TOYInstrInfo
getReservedRegs	TOYRegisterInfo.cpp	/^BitVector TOYRegisterInfo::getReservedRegs(const MachineFunction &MF) const {$/;"	f	class:TOYRegisterInfo
getTOYTargetMachine	TOYTargetMachine.cpp	/^            TOYTargetMachine &getTOYTargetMachine() const {$/;"	f	class:__anon7::TOYPassConfig
getTargetNodeName	TOYISelLowering.cpp	/^const char *TOYTargetLowering::getTargetNodeName(unsigned Opcode) const {$/;"	f	class:TOYTargetLowering
getTheTOYTarget	TargetInfo/TOYTargetInfo.cpp	/^Target &llvm::getTheTOYTarget() {$/;"	f	class:llvm
hasFP	TOYFrameLowering.cpp	/^bool TOYFrameLowering::hasFP(const MachineFunction &MF) const {$/;"	f	class:TOYFrameLowering
isLoadFromStackSlot	TOYInstrInfo.cpp	/^TOYInstrInfo::isLoadFromStackSlot(const MachineInstr *MI, int &FrameIndex) const{$/;"	f	class:TOYInstrInfo
isStoreToStackSlot	TOYInstrInfo.cpp	/^TOYInstrInfo::isStoreToStackSlot(const MachineInstr *MI,$/;"	f	class:TOYInstrInfo
llvm	InstPrinter/TOYInstPrinter.h	/^namespace llvm {$/;"	n
llvm	MCTargetDesc/TOYBaseInfo.h	/^namespace llvm {$/;"	n
llvm	MCTargetDesc/TOYFixupKinds.h	/^namespace llvm {$/;"	n
llvm	MCTargetDesc/TOYMCAsmInfo.h	/^namespace llvm {$/;"	n
llvm	MCTargetDesc/TOYMCTargetDesc.h	/^namespace llvm {$/;"	n
llvm	TOY.h	/^namespace llvm {$/;"	n
llvm	TOYFrameLowering.h	/^namespace llvm {$/;"	n
llvm	TOYISelLowering.h	/^namespace llvm {$/;"	n
llvm	TOYInstrInfo.h	/^namespace llvm {$/;"	n
llvm	TOYMCInstLower.h	/^namespace llvm {$/;"	n
llvm	TOYMachineFunctionInfo.h	/^namespace llvm {$/;"	n
llvm	TOYRegisterInfo.h	/^namespace llvm {$/;"	n
llvm	TOYSelectionDAGInfo.h	/^namespace llvm {$/;"	n
llvm	TOYSubtarget.h	/^namespace llvm {$/;"	n
llvm	TOYTargetMachine.h	/^namespace llvm {$/;"	n
loadRegFromStackSlot	TOYInstrInfo.cpp	/^void TOYInstrInfo::loadRegFromStackSlot(MachineBasicBlock &MBB,$/;"	f	class:TOYInstrInfo
materializeOffset	TOYFrameLowering.cpp	/^static unsigned materializeOffset(MachineFunction &MF, MachineBasicBlock &MBB,$/;"	f	file:
override	MCTargetDesc/TOYAsmBackend.cpp	/^                         bool &IsResolved) override;$/;"	m	class:__anon1::TOYAsmBackend	file:
override	MCTargetDesc/TOYAsmBackend.cpp	/^                  uint64_t Value, bool IsPCRel) const override;$/;"	m	class:__anon1::TOYAsmBackend	file:
override	MCTargetDesc/TOYELFObjectWriter.cpp	/^                          bool IsPCRel) const override;$/;"	m	class:__anon3::TOYELFObjectWriter	file:
override	MCTargetDesc/TOYMCCodeEmitter.cpp	/^                         const MCSubtargetInfo &STI) const override;$/;"	m	class:__anon4::TOYMCCodeEmitter	file:
override	TOYAsmPrinter.cpp	/^  void EmitFunctionBodyStart() override;$/;"	m	class:__anon5::TOYAsmPrinter	file:
override	TOYAsmPrinter.cpp	/^  void EmitFunctionEntryLabel() override;$/;"	m	class:__anon5::TOYAsmPrinter	file:
override	TOYAsmPrinter.cpp	/^  void EmitInstruction(const MachineInstr *MI) override;$/;"	m	class:__anon5::TOYAsmPrinter	file:
override	TOYFrameLowering.h	/^            MachineBasicBlock::iterator I) const override;$/;"	m	class:llvm::TOYFrameLowering
override	TOYFrameLowering.h	/^    bool hasFP(const MachineFunction &MF) const override;$/;"	m	class:llvm::TOYFrameLowering
override	TOYFrameLowering.h	/^    void emitEpilogue(MachineFunction &MF, MachineBasicBlock &MBB) const override;$/;"	m	class:llvm::TOYFrameLowering
override	TOYFrameLowering.h	/^    void emitPrologue(MachineFunction &MF, MachineBasicBlock &MBB) const override;$/;"	m	class:llvm::TOYFrameLowering
override	TOYISelLowering.h	/^                               SmallVectorImpl<SDValue> &InVals) const override;$/;"	m	class:llvm::TOYTargetLowering
override	TOYISelLowering.h	/^                      SelectionDAG &DAG) const override;$/;"	m	class:llvm::TOYTargetLowering
override	TOYISelLowering.h	/^                    SmallVectorImpl<SDValue> &InVals) const override;$/;"	m	class:llvm::TOYTargetLowering
override	TOYInstrInfo.h	/^                                       int &FrameIndex) const override;$/;"	m	class:llvm::TOYInstrInfo
override	TOYInstrInfo.h	/^                                      int &FrameIndex) const override;$/;"	m	class:llvm::TOYInstrInfo
override	TOYInstrInfo.h	/^                               int *BytesRemoved = nullptr) const override;$/;"	m	class:llvm::TOYInstrInfo
override	TOYInstrInfo.h	/^                             bool AllowModify = false) const override;$/;"	m	class:llvm::TOYInstrInfo
override	TOYInstrInfo.h	/^                           bool KillSrc) const override;$/;"	m	class:llvm::TOYInstrInfo
override	TOYInstrInfo.h	/^      override;$/;"	m	class:llvm::TOYInstrInfo
override	TOYInstrInfo.h	/^     override;$/;"	m	class:llvm::TOYInstrInfo
override	TOYRegisterInfo.h	/^         CallingConv::ID) const override;$/;"	m	struct:llvm::TOYRegisterInfo
override	TOYRegisterInfo.h	/^      override;$/;"	m	struct:llvm::TOYRegisterInfo
override	TOYRegisterInfo.h	/^  BitVector getReservedRegs(const MachineFunction &MF) const override;$/;"	m	struct:llvm::TOYRegisterInfo
override	TOYRegisterInfo.h	/^  bool requiresRegisterScavenging(const MachineFunction &MF) const override;$/;"	m	struct:llvm::TOYRegisterInfo
override	TOYRegisterInfo.h	/^  bool trackLivenessAfterRegAlloc(const MachineFunction &MF) const override;$/;"	m	struct:llvm::TOYRegisterInfo
override	TOYRegisterInfo.h	/^  bool useFPForScavengingIndex(const MachineFunction &MF) const override;$/;"	m	struct:llvm::TOYRegisterInfo
override	TOYTargetMachine.cpp	/^             bool addInstSelector() override;$/;"	m	class:__anon7::TOYPassConfig	file:
override	TOYTargetMachine.cpp	/^             bool addPreISel() override;$/;"	m	class:__anon7::TOYPassConfig	file:
override	TOYTargetMachine.cpp	/^             void addPreEmitPass() override;$/;"	m	class:__anon7::TOYPassConfig	file:
override	TOYTargetMachine.h	/^    TargetPassConfig *createPassConfig(PassManagerBase &PM) override;$/;"	m	class:llvm::TOYTargetMachine
printAddrModeMemSrc	InstPrinter/TOYInstPrinter.cpp	/^void TOYInstPrinter::printAddrModeMemSrc(const MCInst *MI, unsigned OpNum,$/;"	f	class:TOYInstPrinter
printExpr	InstPrinter/TOYInstPrinter.cpp	/^static void printExpr(const MCExpr *Expr, raw_ostream &OS) {$/;"	f	file:
printInst	InstPrinter/TOYInstPrinter.cpp	/^void TOYInstPrinter::printInst(const MCInst *MI, raw_ostream &O,$/;"	f	class:TOYInstPrinter
printOperand	InstPrinter/TOYInstPrinter.cpp	/^void TOYInstPrinter::printOperand(const MCInst *MI, unsigned OpNo,$/;"	f	class:TOYInstPrinter
printRegName	InstPrinter/TOYInstPrinter.cpp	/^void TOYInstPrinter::printRegName(raw_ostream &OS, unsigned RegNo) const {$/;"	f	class:TOYInstPrinter
processFixupValue	MCTargetDesc/TOYAsmBackend.cpp	/^void TOYAsmBackend::processFixupValue(const MCAssembler &Asm,$/;"	f	class:TOYAsmBackend
requiresRegisterScavenging	TOYRegisterInfo.cpp	/^TOYRegisterInfo::requiresRegisterScavenging(const MachineFunction &MF) const {$/;"	f	class:TOYRegisterInfo
stackSlotSize	TOYFrameLowering.h	/^    static int stackSlotSize() { return 4; }$/;"	f	class:llvm::TOYFrameLowering
storeRegToStackSlot	TOYInstrInfo.cpp	/^void TOYInstrInfo::storeRegToStackSlot(MachineBasicBlock &MBB,$/;"	f	class:TOYInstrInfo
trackLivenessAfterRegAlloc	TOYRegisterInfo.cpp	/^TOYRegisterInfo::trackLivenessAfterRegAlloc(const MachineFunction &MF) const {$/;"	f	class:TOYRegisterInfo
useFPForScavengingIndex	TOYRegisterInfo.cpp	/^bool TOYRegisterInfo::useFPForScavengingIndex(const MachineFunction &MF) const {$/;"	f	class:TOYRegisterInfo
~TOYAsmBackend	MCTargetDesc/TOYAsmBackend.cpp	/^  ~TOYAsmBackend() {}$/;"	f	class:__anon1::TOYAsmBackend
~TOYELFObjectWriter	MCTargetDesc/TOYELFObjectWriter.cpp	/^TOYELFObjectWriter::~TOYELFObjectWriter() {}$/;"	f	class:TOYELFObjectWriter
~TOYFunctionInfo	TOYMachineFunctionInfo.h	/^  ~TOYFunctionInfo() {}$/;"	f	class:llvm::TOYFunctionInfo
~TOYMCCodeEmitter	MCTargetDesc/TOYMCCodeEmitter.cpp	/^  ~TOYMCCodeEmitter() {}$/;"	f	class:__anon4::TOYMCCodeEmitter
~TOYSelectionDAGInfo	TOYSelectionDAGInfo.cpp	/^TOYSelectionDAGInfo::~TOYSelectionDAGInfo() {}$/;"	f	class:TOYSelectionDAGInfo
